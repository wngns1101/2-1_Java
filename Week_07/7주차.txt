객체지향 특징 3단계

캡슐화(은닉성)   - private 
   - 외부에서 접근하지 못하게 함

상속
   - 부모 객체의 필드와 메소드를 하위 객체에게 물려주는 행위
      - 부모(상위) 객체 재사용
      - 코드의 중복을 줄임
      - 유지 보수의 편리성

다향성(부품화)
   - 같은 타입이지만 실행 결과가 다양한 객체를 대입할 수 있는 성질
      - 객체를 부품화시키는 것 가능
      - 유지보수 용이

소스코드랑 동일한 이름만 public 사용 가능

클래스는 main 없으면 실행 불가능 (main 없는 경우는 다른 클래스에서 이용할 목적으로 만든 클래스)

클래스

필드(객체의 데이터가 저장되는 곳)
int fieldName;

생성자(객체 생성시 초기화 역할 담당)
className() ()

메소드(객체의 동작에 해당되는 실행 블록)
void mehtodName() ()
}
  